#!/bin/bash

# V17 macOS Development Environment Installer
# This script installs JDK, Node.js, Android SDK Command-line Tools, and Appium

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

print_color() { printf "${!1}%s${NC}\n" "$2"; }

find_executable_path() {
    local exec_name=$1
    local path=$(command -v $exec_name)
    if [ -n "$path" ]; then
        echo $(dirname $(readlink -f $path))
    else
        echo ""
    fi
}

check_and_install() {
    local name=$1
    local check_cmd=$2
    local install_cmd=$3
    local version_cmd=$4

    local existing_path=$(find_executable_path $check_cmd)
    if [ -n "$existing_path" ]; then
        print_color "YELLOW" "$name is already installed at $existing_path"
        local version=$($version_cmd 2>&1 | head -n 1)
        print_color "GREEN" "$name version: $version"
        echo $existing_path
    else
        print_color "YELLOW" "Installing $name..."
        eval $install_cmd
        local new_path=$(find_executable_path $check_cmd)
        if [ -n "$new_path" ]; then
            print_color "GREEN" "$name installed successfully at $new_path"
            local version=$($version_cmd 2>&1 | head -n 1)
            print_color "GREEN" "$name version: $version"
            echo $new_path
        else
            print_color "RED" "Failed to install $name"
            echo ""
        fi
    fi
}

install_homebrew() {
    if ! command -v brew &> /dev/null; then
        print_color "YELLOW" "Installing Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        print_color "GREEN" "Homebrew installed successfully."
    else
        print_color "YELLOW" "Homebrew is already installed."
    fi
}

set_env_var() {
    if ! grep -q "export $1=" ~/.zshrc; then
        echo "export $1=$2" >> ~/.zshrc
        print_color "GREEN" "Added $1 environment variable to ~/.zshrc"
    else
        sed -i '' "s|export $1=.*|export $1=$2|" ~/.zshrc
        print_color "YELLOW" "Updated $1 environment variable in ~/.zshrc"
    fi

    if [ -n "$2" ] && ! echo $PATH | grep -q "$2/bin"; then
        echo "export PATH=$2/bin:\$PATH" >> ~/.zshrc
        print_color "GREEN" "Added $2/bin to PATH in ~/.zshrc"
    fi
}

refresh_zshrc() {
    print_color "BLUE" "Refreshing .zshrc..."
    source ~/.zshrc
}

install_jdk() {
    local java_path=$(find_executable_path java)
    if [ -n "$java_path" ]; then
        if [[ $java_path == *"/bin"* ]]; then
            JAVA_HOME=$(dirname "$java_path")
        else
            JAVA_HOME=$java_path
        fi
    else
        check_and_install "JDK" "java" "brew install openjdk@11" "java -version"
        JAVA_HOME=$(brew --prefix openjdk@11)
    fi
    set_env_var "JAVA_HOME" "$JAVA_HOME"
    print_color "GREEN" "JAVA_HOME set to $JAVA_HOME"
}

install_nodejs() {
    local node_path=$(check_and_install "Node.js" "node" "brew install node@14" "node --version")
    NODE_HOME=$node_path
    set_env_var "NODE_HOME" "$NODE_HOME"
}

install_android_sdk() {
    ANDROID_HOME=$HOME/Library/Android/sdk
    CMDLINE_TOOLS=$ANDROID_HOME/cmdline-tools
    LATEST_TOOLS=$CMDLINE_TOOLS/latest

    if [ ! -d "$ANDROID_HOME" ] || [ ! -f "$LATEST_TOOLS/bin/sdkmanager" ]; then
        print_color "YELLOW" "Installing Android SDK..."
        mkdir -p $CMDLINE_TOOLS
        TOOLS_URL="https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip"
        TOOLS_ZIP="commandlinetools.zip"
        curl -o $TOOLS_ZIP $TOOLS_URL
        unzip -q $TOOLS_ZIP -d $CMDLINE_TOOLS
        rm $TOOLS_ZIP
        mv $CMDLINE_TOOLS/cmdline-tools $LATEST_TOOLS
        chmod -R +x $LATEST_TOOLS/bin
        yes | $LATEST_TOOLS/bin/sdkmanager --licenses > /dev/null 2>&1
        $LATEST_TOOLS/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "emulator"
        print_color "GREEN" "Android SDK installed successfully."
    else
        print_color "YELLOW" "Android SDK is already installed."
    fi

    set_env_var "ANDROID_HOME" "$ANDROID_HOME"
    set_env_var "ANDROID_SDK_ROOT" "$ANDROID_HOME"
    echo "export PATH=\$ANDROID_HOME/cmdline-tools/latest/bin:\$ANDROID_HOME/platform-tools:\$ANDROID_HOME/emulator:\$PATH" >> ~/.zshrc

    if [ -f "$LATEST_TOOLS/bin/sdkmanager" ]; then
        local version=$($LATEST_TOOLS/bin/sdkmanager --version 2>&1 | head -n 1)
        print_color "GREEN" "Android SDK version: $version"
    else
        print_color "RED" "Android SDK installation seems incomplete. Please check manually."
    fi

    # Install ADB manually if not found
    if [ ! -f "$ANDROID_HOME/platform-tools/adb" ]; then
        print_color "YELLOW" "ADB not found. Downloading and installing manually..."
        local ADB_ZIP="platform-tools-latest-darwin.zip"
        curl -O https://dl.google.com/android/repository/$ADB_ZIP
        unzip -q $ADB_ZIP -d $ANDROID_HOME
        rm $ADB_ZIP
    fi

    if [ -f "$ANDROID_HOME/platform-tools/adb" ]; then
        print_color "GREEN" "ADB installed successfully."
        $ANDROID_HOME/platform-tools/adb version
    else
        print_color "RED" "ADB installation failed. Please check manually."
    fi
}

install_appium() {
    local appium_path=$(check_and_install "Appium" "appium" "npm install -g appium" "appium --version")
}

install_dependencies() {
    install_homebrew
    install_jdk
    install_nodejs
    install_android_sdk
    install_appium
}

display_dependency_status() {
    print_color "BLUE" "Dependency Status:"
    
    print_color "YELLOW" "JDK:"
    print_color "CYAN" "$JAVA_HOME"
    java -version 2>&1 | head -n 1
    
    print_color "YELLOW" "Node.js:"
    print_color "CYAN" "$NODE_HOME"
    node --version
    
    print_color "YELLOW" "Android SDK:"
    print_color "CYAN" "$ANDROID_HOME"
    if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --version 2>&1 | head -n 1
    else
        print_color "RED" "Android SDK installation seems incomplete. Please check manually."
    fi
    
    print_color "YELLOW" "ADB:"
    if [ -f "$ANDROID_HOME/platform-tools/adb" ]; then
        print_color "CYAN" "$ANDROID_HOME/platform-tools/adb"
        $ANDROID_HOME/platform-tools/adb version | head -n 1
    else
        print_color "RED" "ADB not found. Please check the installation."
    fi
    
    print_color "YELLOW" "Appium:"
    print_color "CYAN" "$(which appium)"
    appium --version
}

main() {
    print_color "GREEN" "Starting V17 macOS Development Environment Installation"
    install_dependencies
    refresh_zshrc
    display_dependency_status
    print_color "GREEN" "Installation complete. Your environment is now set up."
    print_color "MAGENTA" "Please restart your terminal or run 'source ~/.zshrc' to apply all changes."
}

main
