#!/bin/bash

# V20 macOS Development Environment Installer
# This script installs JDK, Node.js, Android SDK Command-line Tools, and Appium

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

print_color() { printf "${!1}%s${NC}\n" "$2"; }

find_executable_path() {
    local exec_name=$1
    local path=$(which $exec_name 2>/dev/null)
    if [ -n "$path" ]; then
        echo $(dirname "$path")
    else
        echo ""
    fi
}

set_env_var() {
    local var_name=$1
    local var_value=$2
    if ! grep -q "export $var_name=" ~/.zshrc; then
        echo "export $var_name=$var_value" >> ~/.zshrc
        print_color "GREEN" "Added $var_name environment variable to ~/.zshrc"
    else
        sed -i '' "s|export $var_name=.*|export $var_name=$var_value|" ~/.zshrc
        print_color "YELLOW" "Updated $var_name environment variable in ~/.zshrc"
    fi

    if [ -n "$var_value" ] && [[ ":$PATH:" != *":$var_value/bin:"* ]]; then
        echo "export PATH=$var_value/bin:\$PATH" >> ~/.zshrc
        print_color "GREEN" "Added $var_value/bin to PATH in ~/.zshrc"
    fi
}

refresh_zshrc() {
    print_color "BLUE" "Refreshing .zshrc..."
    source ~/.zshrc
}

install_homebrew() {
    if ! command -v brew &> /dev/null; then
        print_color "YELLOW" "Installing Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        print_color "GREEN" "Homebrew installed successfully."
    else
        print_color "YELLOW" "Homebrew is already installed."
    fi
}

install_jdk() {
    # 1. Try 'which java'
    local JAVA_HOME=$(find_executable_path java)
    if [ -n "$JAVA_HOME" ]; then
        print_color "YELLOW" "Found Java using 'which java' at $JAVA_HOME"
    else
        # 2. Try '/usr/libexec/java_home'
        JAVA_HOME=$(`/usr/libexec/java_home -v 11 2>/dev/null` || `/usr/libexec/java_home -v 1.8 2>/dev/null`)
        if [ -n "$JAVA_HOME" ]; then
            print_color "YELLOW" "Found Java using '/usr/libexec/java_home' at $JAVA_HOME"
        else
            # 3. Install with Homebrew
            print_color "YELLOW" "No suitable JDK found. Installing OpenJDK 11..."
            brew install openjdk@11
            JAVA_HOME=$(brew --prefix openjdk@11)
        fi
    fi

    set_env_var "JAVA_HOME" "$JAVA_HOME"
    print_color "GREEN" "JAVA_HOME set to $JAVA_HOME"
}

install_nodejs() {
    # 1. Try 'which node'
    local NODE_HOME=$(find_executable_path node)
    if [ -n "$NODE_HOME" ]; then
        print_color "YELLOW" "Found Node.js using 'which node' at $NODE_HOME"
    else
        # 2. Install with Homebrew
        print_color "YELLOW" "Installing Node.js..."
        brew install node@14
        NODE_HOME=$(brew --prefix node@14)
    fi

    set_env_var "NODE_HOME" "$NODE_HOME"
    print_color "GREEN" "NODE_HOME set to $NODE_HOME"
    node --version
}

install_android_sdk() {
    # ... (same as before)
}

install_appium() {
    # ... (same as before)
}

install_dependencies() {
    # ... (same as before)
}

display_dependency_status() {
    # ... (same as before)
}

main() {
    print_color "GREEN" "Starting V20 macOS Development Environment Installation"
    install_dependencies
    refresh_zshrc
    display_dependency_status
    print_color "GREEN" "Installation complete. Your environment is now set up."
    print_color "MAGENTA" "Please restart your terminal or run 'source ~/.zshrc' to apply all changes."
}

main
