#!/bin/bash

# V9 macOS Development Environment Installer
# This script installs JDK, Node.js, Android SDK Command-line Tools, and Appium using Homebrew

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_color() { printf "${!1}%s${NC}\n" "$2"; }

check_version() {
    if command -v $1 &> /dev/null; then
        local version=$($1 --version 2>&1 | head -n 1)
        print_color "YELLOW" "$1 is already installed: $version"
        return 0
    fi
    return 1
}

install_homebrew() {
    if ! command -v brew &> /dev/null; then
        print_color "YELLOW" "Installing Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        print_color "GREEN" "Homebrew installed successfully."
    else
        print_color "YELLOW" "Homebrew is already installed."
    fi
}

install_jdk() {
    if check_version java; then
        return 0
    fi

    print_color "YELLOW" "Installing JDK using Homebrew..."
    brew install openjdk@11

    JAVA_HOME=$(brew --prefix openjdk@11)/libexec/openjdk.jdk/Contents/Home
    set_env_var "JAVA_HOME" "$JAVA_HOME"

    print_color "GREEN" "JDK 11 installed successfully."
    java -version
}

install_nodejs() {
    if check_version node; then
        return 0
    fi

    print_color "YELLOW" "Installing Node.js using Homebrew..."
    brew install node@14

    print_color "GREEN" "Node.js installed successfully."
    node --version
    npm --version
}

install_android_sdk() {
    if [ -d "$HOME/Library/Android/sdk" ]; then
        print_color "YELLOW" "Android SDK is already installed."
        return 0
    fi

    print_color "YELLOW" "Installing Android SDK Command-line Tools using Homebrew..."
    brew install --cask android-sdk

    ANDROID_HOME=$(brew --prefix android-sdk)
    ANDROID_SDK_ROOT="$ANDROID_HOME"

    set_env_var "ANDROID_HOME" "$ANDROID_HOME"
    set_env_var "ANDROID_SDK_ROOT" "$ANDROID_SDK_ROOT"

    print_color "YELLOW" "Installing Android SDK packages..."
    yes | sdkmanager --licenses > /dev/null 2>&1
    sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"

    print_color "GREEN" "Android SDK Command-line Tools installed successfully."
}

install_appium() {
    if check_version appium; then
        return 0
    fi

    if ! command -v npm &> /dev/null; then
        print_color "RED" "npm is not installed. Please install Node.js first."
        return 1
    fi

    print_color "YELLOW" "Installing Appium using npm..."
    npm install -g appium

    print_color "GREEN" "Appium installed successfully."
    appium --version
}

verify_path() {
    print_color "BLUE" "Verifying PATH variables..."
    for var in JAVA_HOME NODE_HOME ANDROID_HOME ANDROID_SDK_ROOT; do
        if ! echo $PATH | grep -q "${!var}/bin"; then
            print_color "RED" "WARNING: ${!var}/bin is not in your PATH. Please add it manually."
        else
            print_color "GREEN" "${!var}/bin is in your PATH."
        fi
    done
}

set_env_var() {
    if ! grep -q "export $1=" ~/.zshrc; then
        echo "export $1=$2" >> ~/.zshrc
        print_color "GREEN" "Added $1 environment variable to ~/.zshrc"
    else
        sed -i '' "s|export $1=.*|export $1=$2|" ~/.zshrc
        print_color "YELLOW" "Updated $1 environment variable in ~/.zshrc"
    fi
}

main() {
    print_color "GREEN" "Starting V9 macOS Development Environment Installation"

    install_homebrew
    install_jdk
    install_nodejs
    install_android_sdk
    install_appium

    verify_path

    print_color "GREEN" "Installation complete. Please restart your terminal or run 'source ~/.zshrc' to apply all changes."
    print_color "YELLOW" "Installation paths:"
    echo "JDK: $JAVA_HOME"
    echo "Node.js: $NODE_HOME"
    echo "Android SDK: $ANDROID_HOME"
    echo "Appium: $(which appium)"

    print_color "BLUE" "To verify the installation, you can run the following commands:"
    echo "java -version"
    echo "node -v"
    echo "npm -v"
    echo "adb version"
    echo "appium -v"
}

main
